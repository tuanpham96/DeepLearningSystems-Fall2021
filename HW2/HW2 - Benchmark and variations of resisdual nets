{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HW2 - Benchmark and variations of resisdual nets","provenance":[],"collapsed_sections":["5srGwh1mvwFy","EADXme5Fv8Kq","XazGWADCwMZH"],"toc_visible":true,"authorship_tag":"ABX9TyPCheRwubRvWJ1QN2FahsAD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"jmuRVwvTqmqF"},"source":["# Startup \n","\n","Code repo: https://github.com/tuanpham96/DeepLearningSystems-Fall2021"]},{"cell_type":"markdown","metadata":{"id":"i9aA3xvNvOd9"},"source":["Consulted sources from:\n","\n","- [HW 2 colab notebook](https://colab.research.google.com/drive/1kyFRtM70oZ28ERx4ey5Qd4aLw_AR7gRx?usp=sharing)"]},{"cell_type":"markdown","metadata":{"id":"qK7u3R_rrmkW"},"source":["## Initialization"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BnbkxaDPqIUr","executionInfo":{"status":"ok","timestamp":1633912808776,"user_tz":300,"elapsed":123,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}},"outputId":"507d7a68-2c9f-448f-ee20-3b4c808c9630"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Be7o7n72q6U_","executionInfo":{"status":"ok","timestamp":1633912808931,"user_tz":300,"elapsed":16,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}},"outputId":"d23b8291-3b2c-4ce9-f24e-770ddf39ef67"},"source":["%cd \"/content/drive/MyDrive/Courses/Fall 2021/dlsys/DeepLearningSystems-Fall2021/HW2\""],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Courses/Fall 2021/dlsys/DeepLearningSystems-Fall2021/HW2\n"]}]},{"cell_type":"markdown","metadata":{"id":"hp0eyXxgrlO9"},"source":["## Download CIFAR10 data \n"]},{"cell_type":"markdown","metadata":{"id":"2y6Lt85pr5O2"},"source":["\n","Download CIFAR10 & CIFAR10.1 v6\n","\n","Run only once"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"72NO17xbrIyf","executionInfo":{"status":"ok","timestamp":1633912808932,"user_tz":300,"elapsed":13,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}},"outputId":"c59e9999-a246-4842-d720-63f5f59c7bf7"},"source":["%%bash\n","\n","if [ -f 'data/cifar-10-binary.tar.gz' ]; then\n","    ls data\n","    exit 1\n","fi\n","\n","cd data\n","wget \"https://www.cs.toronto.edu/~kriz/cifar-10-binary.tar.gz\" -O \"cifar-10-binary.tar.gz\"\n","wget \"https://github.com/modestyachts/CIFAR-10.1/raw/master/datasets/cifar10.1_v6_data.npy\" -O \"cifar10.1_v6_data.npy\"\n","wget \"https://github.com/modestyachts/CIFAR-10.1/raw/master/datasets/cifar10.1_v6_labels.npy\" -O \"cifar10.1_v6_labels.npy\"\n","tar -xvzf \"cifar-10-binary.tar.gz\"\n","cd ..\n"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["cifar10.1_v6_data.npy\n","cifar10.1_v6_labels.npy\n","cifar-10-batches-bin\n","cifar-10-binary.tar.gz\n","test1-1_stat.csv\n"]}]},{"cell_type":"code","metadata":{"id":"c2D_3P_ouhhS","executionInfo":{"status":"ok","timestamp":1633912808933,"user_tz":300,"elapsed":10,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}}},"source":["# pytorch packages setup: currently doesn't seem to be necessary\n","# !pip3 install --no-cache-dir torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YFe1-gOQumWc"},"source":["# Run"]},{"cell_type":"markdown","metadata":{"id":"gi2nciWBvq-L"},"source":["## Initialization"]},{"cell_type":"code","metadata":{"id":"jseB39mpurtU","executionInfo":{"status":"ok","timestamp":1633912815624,"user_tz":300,"elapsed":1435,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}}},"source":["import os, time, glob\n","import pandas as pd\n","import numpy as np\n","from tqdm.notebook import tqdm\n","\n","from src.experiment_routines import *"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"xnI8gR3rvgg-","executionInfo":{"status":"ok","timestamp":1633912815626,"user_tz":300,"elapsed":13,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}}},"source":["# common variables\n","BATCH_SIZE = 32\n","EPOCHS = 15\n","SEED = 3456"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"TNLo9b8Dyi1y","executionInfo":{"status":"ok","timestamp":1633912816227,"user_tz":300,"elapsed":611,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}}},"source":["data_loaders = get_data_loaders(batch_size = BATCH_SIZE)\n","device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XuwhC40UQlvy","executionInfo":{"status":"ok","timestamp":1633912816230,"user_tz":300,"elapsed":9,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}},"outputId":"c3ce0558-6170-4e48-d9f6-b1d1cf943539"},"source":["mod_arch_conf = ModelArchConfig()\n","mod_arch_conf.print_opts()"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["{'activation_functions': ['sigmoid', 'tanh', 'relu', 'elu', 'lrelu', 'silu'],\n"," 'batchnorm_layer_locs': ['none', 'conv', 'fc', 'all'],\n"," 'batchnorm_locs_rel_to_act': ['before', 'after'],\n"," 'skip_connections': [0, 1, 2]}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v351P_nXUc93","executionInfo":{"status":"ok","timestamp":1633912816231,"user_tz":300,"elapsed":7,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}},"outputId":"1afe60e8-b7f2-46d3-b326-7acd3387b940"},"source":["optimsched_conf = OptimAndSched()\n","optimsched_conf.print_opts()"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["{'optimizers': ['sgd', 'adam'],\n"," 'schedulers': ['const', 'step', 'c', 'reduce_on_plateau', 'anneal']}\n"]}]},{"cell_type":"markdown","metadata":{"id":"5srGwh1mvwFy"},"source":["## Experiment 1: Activation functions"]},{"cell_type":"code","metadata":{"id":"ukR58K4hEFms","executionInfo":{"status":"ok","timestamp":1633912831510,"user_tz":300,"elapsed":120,"user":{"displayName":"Tuan Pham","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgG9io_G8UlUCnCJIPDToyzRUEWyAQYHjYGEIZsiA=s64","userId":"04312096117679155400"}}},"source":["exp_config = dict(\n","    name            = 'exp1-actfun',\n","    param   = dict(\n","        act         = mod_arch_conf.act_opts,\n","    ),\n","    const = dict( \n","        skip        = 0, \n","        bn_layer    = 'none',\n","        bn_act      = 'before',\n","        optim       = 'adam', \n","        sched       = 'const',\n","        lr          = 1e-3, \n","        num_epoch   = EPOCHS,\n","        seed        = SEED\n","    )\n",")"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":713},"id":"qAkW3aYVSYyQ","outputId":"0616d4bc-412d-4c01-a9ab-6c45827ed884"},"source":["run_experiment(exp_config, device, data_loaders, out_path='output')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dcbf6374b41f47d6aec4cabf4e0f2bdb","version_minor":0,"version_major":2},"text/plain":["Main:   0%|                                                                                                   …"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"518e94d9441946d8bebcf85d53293bbc","version_minor":0,"version_major":2},"text/plain":["ID=0:   0%|                                                                                                   …"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)\n","  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)\n"]},{"output_type":"stream","name":"stdout","text":["exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 01/15 | iter = 53.8s | total = 0.90m || TRAIN: acc = 10.0 | loss = 2.361 | time = 49.7s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 02/15 | iter = 54.3s | total = 1.80m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.3s || VALID: acc = 10.0 | loss = 2.361 | time = 4.0s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 03/15 | iter = 54.5s | total = 2.71m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.4s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 04/15 | iter = 54.4s | total = 3.62m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.3s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 05/15 | iter = 55.0s | total = 4.53m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.8s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 06/15 | iter = 54.5s | total = 5.44m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.4s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 07/15 | iter = 54.6s | total = 6.35m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.5s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 08/15 | iter = 54.6s | total = 7.26m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.5s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 09/15 | iter = 54.8s | total = 8.18m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.7s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 10/15 | iter = 54.8s | total = 9.09m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.6s || VALID: acc = 10.0 | loss = 2.361 | time = 4.2s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 11/15 | iter = 54.9s | total = 10.00m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.7s || VALID: acc = 10.0 | loss = 2.361 | time = 4.2s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 12/15 | iter = 54.6s | total = 10.91m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.5s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 13/15 | iter = 54.6s | total = 11.82m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.6s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 14/15 | iter = 55.1s | total = 12.74m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.9s || VALID: acc = 10.0 | loss = 2.361 | time = 4.2s || \n","exp1-actfun-0 (vary: sigmoid) \t || EPOCH: 15/15 | iter = 54.8s | total = 13.67m || TRAIN: acc = 10.0 | loss = 2.361 | time = 50.7s || VALID: acc = 10.0 | loss = 2.361 | time = 4.1s || \n","\t\t ==> TEST: acc = 9.9 | loss = 2.362 | time = 0.9s \n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09630a96b1444aca83e475882348c0f4","version_minor":0,"version_major":2},"text/plain":["ID=1:   0%|                                                                                                   …"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["exp1-actfun-1 (vary: tanh) \t || EPOCH: 01/15 | iter = 54.4s | total = 0.91m || TRAIN: acc = 19.1 | loss = 2.269 | time = 50.2s || VALID: acc = 21.9 | loss = 2.242 | time = 4.2s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 02/15 | iter = 55.0s | total = 1.82m || TRAIN: acc = 17.5 | loss = 2.286 | time = 50.9s || VALID: acc = 19.7 | loss = 2.264 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 03/15 | iter = 54.2s | total = 2.73m || TRAIN: acc = 13.8 | loss = 2.323 | time = 50.1s || VALID: acc = 19.6 | loss = 2.265 | time = 4.0s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 04/15 | iter = 54.0s | total = 3.63m || TRAIN: acc = 19.2 | loss = 2.269 | time = 50.0s || VALID: acc = 20.0 | loss = 2.261 | time = 4.0s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 05/15 | iter = 54.4s | total = 4.53m || TRAIN: acc = 21.4 | loss = 2.247 | time = 50.3s || VALID: acc = 23.1 | loss = 2.231 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 06/15 | iter = 54.7s | total = 5.44m || TRAIN: acc = 20.9 | loss = 2.252 | time = 50.6s || VALID: acc = 22.5 | loss = 2.236 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 07/15 | iter = 54.6s | total = 6.35m || TRAIN: acc = 22.5 | loss = 2.236 | time = 50.5s || VALID: acc = 21.7 | loss = 2.244 | time = 4.2s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 08/15 | iter = 54.4s | total = 7.26m || TRAIN: acc = 20.7 | loss = 2.254 | time = 50.3s || VALID: acc = 22.4 | loss = 2.237 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 09/15 | iter = 54.2s | total = 8.16m || TRAIN: acc = 21.9 | loss = 2.242 | time = 50.1s || VALID: acc = 20.6 | loss = 2.255 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 10/15 | iter = 54.3s | total = 9.07m || TRAIN: acc = 22.4 | loss = 2.237 | time = 50.2s || VALID: acc = 23.1 | loss = 2.230 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 11/15 | iter = 54.4s | total = 9.97m || TRAIN: acc = 22.6 | loss = 2.235 | time = 50.2s || VALID: acc = 24.1 | loss = 2.220 | time = 4.2s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 12/15 | iter = 54.0s | total = 10.87m || TRAIN: acc = 22.5 | loss = 2.237 | time = 49.9s || VALID: acc = 23.1 | loss = 2.231 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 13/15 | iter = 53.6s | total = 11.77m || TRAIN: acc = 19.9 | loss = 2.262 | time = 49.5s || VALID: acc = 17.5 | loss = 2.286 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 14/15 | iter = 53.6s | total = 12.66m || TRAIN: acc = 19.9 | loss = 2.262 | time = 49.5s || VALID: acc = 24.4 | loss = 2.217 | time = 4.1s || \n","exp1-actfun-1 (vary: tanh) \t || EPOCH: 15/15 | iter = 54.2s | total = 13.58m || TRAIN: acc = 22.1 | loss = 2.240 | time = 50.0s || VALID: acc = 23.6 | loss = 2.225 | time = 4.2s || \n","\t\t ==> TEST: acc = 20.7 | loss = 2.254 | time = 0.9s \n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"96b49f3059fa47dcbe6edc3682fad2a5","version_minor":0,"version_major":2},"text/plain":["ID=2:   0%|                                                                                                   …"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["exp1-actfun-2 (vary: relu) \t || EPOCH: 01/15 | iter = 54.2s | total = 0.90m || TRAIN: acc = 33.9 | loss = 2.116 | time = 50.0s || VALID: acc = 40.1 | loss = 2.055 | time = 4.2s || \n","exp1-actfun-2 (vary: relu) \t || EPOCH: 02/15 | iter = 54.7s | total = 1.81m || TRAIN: acc = 43.9 | loss = 2.017 | time = 50.6s || VALID: acc = 49.3 | loss = 1.964 | time = 4.1s || \n"]}]},{"cell_type":"markdown","metadata":{"id":"EADXme5Fv8Kq"},"source":["## Experiment 2: Skip connection"]},{"cell_type":"code","metadata":{"id":"2A4KXrzJwCXc"},"source":["exp_config = dict(\n","    name            = 'exp2-skip',\n","    param   = dict(\n","        skip        = mod_arch_conf.skip_opts,\n","    ),\n","    const = dict( \n","        act         = 'relu', \n","        bn_layer    = 'none',\n","        bn_act      = 'before',\n","        optim       = 'adam', \n","        sched       = 'const',\n","        lr          = 1e-3, \n","        num_epoch   = EPOCHS,\n","        seed        = SEED\n","    )\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-4Y-aNkIwCXd"},"source":["run_experiment(exp_config, device, data_loaders, out_path='output')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XazGWADCwMZH"},"source":["## Experiment 3: Batch-normalization"]},{"cell_type":"code","metadata":{"id":"z3D60NkbwYiZ"},"source":["exp_config = dict(\n","    name            = 'exp3-bn',\n","    param   = dict(\n","        bn_layer    = mod_arch_conf.bn_layer_opts,\n","        bn_act      = mod_arch_conf.bn_loc2act_opts\n","    ),\n","    const = dict( \n","        act         = 'relu', \n","        skip        = 2,\n","        optim       = 'adam', \n","        sched       = 'const',\n","        lr          = 1e-3, \n","        num_epoch   = EPOCHS,\n","        seed        = SEED\n","    )\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WM6Nh0EgwYib"},"source":["run_experiment(exp_config, device, data_loaders, out_path='output')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"86HAp32kxI-b"},"source":["## Experiment 4: Optimizer"]},{"cell_type":"code","metadata":{"id":"8leim5cGxI-1"},"source":["exp_config = dict(\n","    name            = 'exp4-optim',\n","    param   = dict(\n","        optim       = optimsched_conf.optim_opts\n","    ),\n","    const = dict( \n","        act         = 'relu', \n","        skip        = 2,\n","        bn_layer    = 'all', \n","        bn_act      = 'before',\n","        sched       = 'const',\n","        lr          = 1e-3, \n","        num_epoch   = EPOCHS,\n","        seed        = SEED\n","    )\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tXEx3tVAxI-2"},"source":["run_experiment(exp_config, device, data_loaders, out_path='output')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"g3jU-amOxt67"},"source":["## Experiment 5: Schedulers"]},{"cell_type":"code","metadata":{"id":"XgWzI4-Oxt68"},"source":["exp_config = dict(\n","    name            = 'exp5-sched',\n","    param   = dict(\n","        sched       = optimsched_conf.sched_opts\n","    ),\n","    const = dict( \n","        act         = 'relu', \n","        skip        = 2,\n","        bn_layer    = 'all', \n","        bn_act      = 'before',\n","        optim       = 'adam',\n","        lr          = 1e-3, \n","        num_epoch   = EPOCHS,\n","        seed        = SEED\n","    )\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7hZINBHoxt68"},"source":["run_experiment(exp_config, device, data_loaders, out_path='output')"],"execution_count":null,"outputs":[]}]}